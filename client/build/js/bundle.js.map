{"version":3,"sources":["webpack:///webpack/bootstrap 32e6bad7a5fb0039a89a","webpack:///./src/index.js","webpack:///./src/models/gamepiece.js","webpack:///./src/models/renderengine.js","webpack:///./src/models/game.js","webpack:///./src/models/gameboard.js","webpack:///./src/models/pieceRels.js","webpack:///./src/models/user.js","webpack:///./src/models/log.js","webpack:///./src/models/selectrenderengine.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;;AAGL;;;;;;;AChGA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,wBAAuB,uBAAuB;AAC9C,4BAA2B,0BAA0B;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,wBAAuB,uBAAuB;AAC9C,4BAA2B,0BAA0B;;AAErD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,wBAAuB,uBAAuB;AAC9C,4BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,wBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,wBAAuB,QAAQ;AAC/B,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,uBAAsB;AACtB;AACA;AACA,MAAK;AACL;AACA;AACA,wBAAuB,uBAAuB;AAC9C,4BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACnLA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,wBAAuB,kBAAkB;AACzC,4BAA2B,qBAAqB;AAChD;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,kBAAkB;AACzC;AACA,gCAA+B,qBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,yBAAwB,mCAAmC,MAAM;AACjE;AACA,yBAAwB,mCAAmC;AAC3D;AACA,yBAAwB,mCAAmC,OAAO;AAClE;AACA,yBAAwB,mCAAmC,SAAS;AACpE;AACA,yBAAwB;AACxB;AACA;AACA;;AAEA;;;;;;;ACnHA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,wBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA,MAAK;AACL;AACA,wBAAuB,kBAAkB;AACzC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,gCAAgC;AAC/E;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,kDAAiD;AACjD,cAAa;AACb,kDAAiD;AACjD,cAAa;AACb,kDAAiD;AACjD;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,wBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,wBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;AClRA;AACA;AACA,uBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,QAAQ;AAC/B;AACA,4BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;ACtJA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;ACvCA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA,yBAAwB,iCAAiC,EAAE,yBAAyB;AACpF,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,kBAAkB;AACvD,MAAK;AACL;AACA;AACA;AACA;AACA;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,wBAAuB,kBAAkB;AACzC,4BAA2B,qBAAqB;AAChD;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,wBAAuB,QAAQ;AAC/B;AACA,4BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,kBAAkB;AACzC;AACA,gCAA+B,qBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,yBAAwB;AACxB;AACA,yBAAwB;AACxB;AACA,yBAAwB;AACxB;AACA,yBAAwB;AACxB;AACA,yBAAwB;AACxB;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA,wBAAuB,mBAAmB;AAC1C;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA,wBAAuB,QAAQ;AAC/B;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 32e6bad7a5fb0039a89a\n **/","var Game = require('./models/game.js');\nvar User = require('./models/user.js');\n\nwindow.onload = function(e) {\n\n    var content = document.getElementById('load_in_content');\n    loadPage('login.html', content, createLoginScreen);\n\n};\n\nvar loadPage = function(url, element, callback) {\n    var request = new XMLHttpRequest();\n    request.onload = function() {\n        if (request.status === 200) {\n            element.innerHTML = request.responseText;\n            callback();\n        }\n    };\n    request.open(\"GET\", url);\n    request.send(null);\n};\n\nvar createLoginScreen = function() {\n    var button = document.getElementById('play_button');\n    button.addEventListener('click', function(e) {\n        var blue = document.getElementById('blue_user').value;\n        var yellow = document.getElementById('yellow_user').value;\n        var red = document.getElementById('red_user').value;\n        var green = document.getElementById('green_user').value;\n        var users = [];\n        users = [blue, yellow, red, green];\n        for (var i = 0; i < users.length; i++) {\n            if (users[i] === '') {\n                users[i] = 'Player ' + (i + 1);\n            }\n        }\n        loadPage('gameboard.html', document.getElementById('load_in_content'), function() {\n            createGameBoard(users);\n        });\n    });\n    document.getElementById('load_button').addEventListener('click', function(e) {\n        var logNumber = document.getElementById('gameid_input').value;\n        loadPage('gameboard.html', document.getElementById('load_in_content'), function() {\n            createGameBoard(null, parseInt(logNumber));\n        });\n    });\n};\n\nvar createGameBoard = function(users, logNumber) {\n    var canvas = document.getElementById('gameboard');\n    var selectCanvas = document.getElementById('selectpanel');\n    var game = null;\n    if (logNumber){\n        game = new Game([], canvas, 600, selectCanvas);\n        game.redraw();\n        game.loadLog(parseInt(logNumber));\n    } else {\n        game = new Game(users, canvas, 600, selectCanvas);\n    }\n\n    game.redraw();\n\n    selectCanvas.addEventListener('click', function(e) {\n        game.userSelectPiece(e);\n    });\n\n    canvas.addEventListener('click', function(e) {\n        game.placePiece(e);\n    });\n    canvas.addEventListener('mousemove', function(e) {\n        game.onHover(e);\n    });\n    window.addEventListener('keyup', function(e) {\n        if (e.keyCode === 82) {\n            game.rotatePiece();\n        } else if (e.keyCode === 70) {\n            game.flipPiece();\n        } else if (e.keyCode === 83) {\n            game.saveLog();\n        }\n    });\n\n    document.getElementById('skip_button').addEventListener('click', function(e) {\n        game.skipTurn();\n    });\n    document.getElementById('save_button').addEventListener('click', function(e) {\n        game.saveLog();\n    });\n    document.getElementById('rotate_button').addEventListener('click', function(e) {\n        game.rotatePiece();\n    });\n    document.getElementById('flip_button').addEventListener('click', function(e) {\n        game.flipPiece();\n    });\n\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.js\n ** module id = 0\n ** module chunks = 0\n **/","var GamePiece = function(tiles) {\n    this.relative = tiles;\n    this.array = this.generateArray();\n    this.setup(tiles);\n\n};\n\nGamePiece.prototype = {\n\n    setup: function(input) {\n        for (var array of input) {\n            if (array.length > 0) {\n                for (var element of array) {\n                    this.changeTile(element, input.indexOf(array), 1);\n                }\n            }\n        }\n    },\n    changeTile: function(x, y, value) {\n        this.array[y][x] = value;\n    },\n    corners: function(coordinates) {\n        var startY = coordinates[0] - 2;\n        var startX = coordinates[1] - 2;\n        var corners = [];\n        for (var y = 0; y < this.array.length; y++) {\n            for (var x = 0; x < this.array[y].length; x++) {\n\n                if (this.array[y][x]) {\n                    if (this.array[y + 1]) {\n                        if (!this.array[y][x + 1] && !this.array[y + 1][x]) {\n                            corners.push([startY + y + 1, startX + x + 1]);\n                        }\n                        if (!this.array[y][x - 1] && !this.array[y + 1][x]) {\n                            corners.push([startY + y + 1, startX + x - 1]);\n                        }\n                    } else if (this.array[y + 1] === undefined) {\n                        if (!this.array[y][x + 1]) {\n                            corners.push([startY + y + 1, startX + x + 1]);\n                        }\n                        if (!this.array[y][x - 1]) {\n                            corners.push([startY + y + 1, startX + x - 1]);\n                        }\n                    }\n\n                    if (this.array[y - 1]) {\n                        if (!this.array[y][x + 1] && !this.array[y - 1][x]) {\n                            corners.push([startY + y - 1, startX + x + 1]);\n                        }\n                        if (!this.array[y][x - 1] && !this.array[y - 1][x]) {\n                            corners.push([startY + y - 1, startX + x - 1]);\n                        }\n                    } else if (this.array[y -1] === undefined) {\n                        if (!this.array[y][x + 1]) {\n                            corners.push([startY + y - 1, startX + x + 1]);\n                        }\n                        if (!this.array[y][x - 1]) {\n                            corners.push([startY + y - 1, startX + x - 1]);\n                        }\n                    }\n                }\n            }\n        }\n        return this.unique(corners);\n    },\n\n    flats: function(coordinates) {\n        var startY = coordinates[0] - 2;\n        var startX = coordinates[1] - 2;\n        var flatsArray = [];\n        for (var y = 0; y < this.array.length; y++) {\n            for (var x = 0; x < this.array[y].length; x++) {\n\n                if (this.array[y][x]) {\n\n                      if (!this.array[y][x + 1]) {\n                          flatsArray.push([startY + y, startX + x + 1]);\n                      }\n\n                      if (!this.array[y][x - 1]) {\n                          flatsArray.push([startY + y, startX + x - 1]);\n                      }\n\n                      if (this.array[y + 1]){\n                        if (!this.array[y + 1][x] || this.array[y + 1][x] === undefined) {\n                          flatsArray.push([startY + y + 1, startX + x]);\n                        }\n                      }else{\n                        flatsArray.push([startY + y + 1, startX + x]);\n                      }\n\n                      if (this.array[y - 1]){\n                        if (!this.array[y - 1][x] || this.array[y - 1][x] === undefined) {\n\n                          flatsArray.push([startY + y - 1, startX + x]);\n                        }\n                      }else{\n                        flatsArray.push([startY + y - 1, startX + x]);\n                      }\n                }\n            }\n        }\n        return this.unique(flatsArray);\n    },\n\n    covered: function(coordinates) {\n        var startY = coordinates[0] - 2;\n        var startX = coordinates[1] - 2;\n        coveredSquares = [];\n        for (var y = 0; y < this.array.length; y++) {\n            for (var x = 0; x < this.array[y].length; x++) {\n                if (this.array[y][x]) {\n                    coveredSquares.push([startY + y, startX + x]);\n                }\n            }\n        }\n        return coveredSquares;\n    },\n\n    unique: function(array){\n       var uniqueArray = [];\n       for (var item of array){\n          if (!this.isItemInArray(uniqueArray, item)){\n            uniqueArray.push(item);\n          }\n       }\n       return uniqueArray;\n    },\n\n  isItemInArray: function(array, item) {\n        for (var i = 0; i < array.length; i++) {\n            if (array[i][0] == item[0] && array[i][1] == item[1]) {\n                return true;\n            }\n        }\n        return false;\n    },\n    rotate: function() {\n        var rotatedArray = this.generateArray();\n        for (var x = 4; x > -1; x--) {\n            for (var y = 0; y < 5; y++) {\n                var newY = y - 4;\n                if (newY < 0) {\n                    newY = newY * -1;\n                }\n                rotatedArray[x][y] = this.array[newY][x];\n            }\n        }\n        this.array = rotatedArray;\n        this.getRel();\n    },\n    flip: function() { // NOTE: do we want just vertical flip - do we want horizontal flip also\n        this.array = this.array.reverse();\n        this.getRel();\n    }, // NOTE: horizontal flip could be done by rotate twice and then flip ( no new functions required)\n    getRel: function() {\n        var rel = [[],[],[],[],[]];\n        for (var y = 0; y < this.array.length; y++) {\n            for (var x = 0; x < this.array[y].length; x++) {\n                if (this.array[y][x]) {\n                    rel[y].push(x);\n                }\n            }\n        }\n        this.relative = rel;\n        return this.relative;\n    },\n    generateArray: function(){\n        var array = new Array(5);\n        for (var i = 0; i < 5; i++) {\n            array[i] = new Array(5);\n            for (var j = 0; j < 5; j++) {\n                array[i][j] = 0;\n            }\n        }\n        return array;\n    }\n\n};\nmodule.exports = GamePiece;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/models/gamepiece.js\n ** module id = 1\n ** module chunks = 0\n **/","var RenderEngine = function(element, heightWidth) {\n    this.canvas = element;\n    this.canvas.height = heightWidth;\n    this.canvas.width = heightWidth;\n    this.context = this.canvas.getContext('2d');\n    this.scale = heightWidth / 20;\n};\n\nRenderEngine.prototype = {\n    fillBox: function(x, y, colour) {\n        this.context.fillStyle = colour.light;\n        this.context.fillRect(x*this.scale, y*this.scale, this.scale, this.scale);\n        this.context.fillStyle = colour.dark;\n        this.context.fillRect((x*this.scale)+3, (y*this.scale)+3, this.scale-6, this.scale-6);\n        this.context.fillStyle = colour.light;\n        this.context.fillRect((x*this.scale)+5, (y*this.scale)+5, this.scale-10, this.scale-10);\n        this.context.lineWidth = 1;\n    },\n    fillBoard: function(board) {\n        for (var y = 0; y < board.length; y++) {\n            for (var x = 0; x < board[y].length; x++) {\n                this.fillBox(x,y,this.getUserColour(board[y][x]));\n            }\n        }\n    },\n    getMousePos: function(e) {\n        var rect = this.canvas.getBoundingClientRect();\n        var tPadding = parseInt(window.getComputedStyle(this.canvas, null).getPropertyValue('padding-left'));\n        var lPadding = parseInt(window.getComputedStyle(this.canvas, null).getPropertyValue('padding-top'));\n        x = e.clientX - rect.left - lPadding;\n        y = e.clientY - rect.top - tPadding;\n        return {x: parseInt(x / this.scale), y: parseInt(y / this.scale)};\n    },\n    redraw: function(board, mouseEvent, userColour, piece) {\n        var curPos = null;\n        if (mouseEvent) {\n            curPos = this.getMousePos(mouseEvent);\n        }\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.fillBoard(board);\n        if (curPos &&  userColour &&piece) {\n            this.highlightBox(curPos, userColour, piece);\n        }\n        this.drawGrid();\n    },\n    highlightBox: function(pos, userColour, piece) {\n        this.context.beginPath();\n        this.context.strokeStyle = this.getUserColour(userColour).light;\n        this.context.lineWidth = this.scale / 5;\n        var x = pos.x - 2;\n        var y = pos.y - 2;\n        for (var i = 0; i < piece.length; i++) {\n            if (piece[i]) {\n                for (var j = 0; j < piece[i].length; j++) {\n                    this.drawBoxPart(x + piece[i][j], y+i, 'top');\n                    this.drawBoxPart(x + piece[i][j], y+i, 'bottom');\n                    this.drawBoxPart(x + piece[i][j], y+i, 'left');\n                    this.drawBoxPart(x + piece[i][j], y+i, 'right');\n                }\n            }\n        }\n        this.context.stroke();\n        this.context.lineWidth = 1;\n    },\n    drawBoxPart: function(x, y, box) {\n        x *= this.scale;\n        y *= this.scale;\n        switch (box) {\n            case 'top':\n                this.context.moveTo(x + 1, y + 1);\n                this.context.lineTo(x + (this.scale-1), y + 1);\n                break;\n            case 'left':\n                this.context.moveTo(x + 1, y + 1);\n                this.context.lineTo(x + 1, y + (this.scale-1));\n                break;\n            case 'right':\n                this.context.moveTo(x + (this.scale-1), y + 1);\n                this.context.lineTo(x + (this.scale-1), y + (this.scale-1));\n                break;\n            case 'bottom':\n                this.context.moveTo(x + 1, y + (this.scale-1));\n                this.context.lineTo(x + (this.scale-1), y + (this.scale-1));\n                break;\n        }\n    },\n    drawGrid: function() {\n        this.context.beginPath();\n        var i = 0;\n        while ( i <= this.canvas.width ) {\n            this.context.strokeStyle = \"#837E7C\";\n            this.context.moveTo(i,0);\n            this.context.lineTo(i, this.canvas.height);\n            this.context.moveTo(0,i);\n            this.context.lineTo(this.canvas.width, i);\n            i = i + this.scale;\n        }\n        this.context.stroke();\n    },\n    getUserColour: function(colour) {\n        switch (colour) {\n            case 'R':\n                return {light: '#F62217', dark: '#800517'};//red;light coral, ruby\n            case 'G':\n                return {light: '#4CC417', dark: '#437C17'};//green\n            case 'B':\n                return {light: '#488AC7', dark: '#1F45FC'};//blue; blue eyes, orchid\n            case 'Y':\n                return {light: '#FFFF00', dark: '#C68E17'};//yellow; rubberduck, caramel\n            default:\n                return {light: '#FFFFFF', dark: '#E5E4E2'};\n        }\n    }\n};\n\nmodule.exports = RenderEngine;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/models/renderengine.js\n ** module id = 2\n ** module chunks = 0\n **/","var GameBoard = require('./gameboard.js');\nvar RenderEngine = require('./renderengine.js');\nvar SelectRenderEngine = require('./selectrenderengine.js');\nvar PresetPieces = require('./pieceRels.js');\nvar GamePiece = require('./gamepiece.js');\nvar User = require('./user.js');\nvar Log = require('./log.js');\n\nvar Game = function(users, canvasElement, canvasWidth, selectCanvasElement) {\n    this.users = [];\n    this.currentUser = 0;\n    this.board = new GameBoard();\n    this.render = new RenderEngine(canvasElement, canvasWidth);\n    this.selectRenderEngine = new SelectRenderEngine(selectCanvasElement, 600, 140);\n    this.log = new Log();\n\n    this.playing = true;\n    this.logPlaying = false;\n    this.uID = parseInt(Math.random() * 10000);\n\n    this.createUsers(users);\n    this.assignPieces();\n    this.logStartGame();\n};\n\nGame.prototype = {\n\n    logStartGame: function() {\n        this.log.setGameID(this.uID);\n        for (var i = 0; i < this.users.length; i++) {\n            this.log.addData('username', this.users[i].name);\n        }\n        console.log(\"Your game id is:\", this.uID);\n    },\n    createUsers: function(users) {\n        for (var i = 0; i < users.length; i++) {\n            this.createUser(users[i]);\n        }\n    },\n    createUser: function(user) {\n        var colour = null;\n        switch (this.users.length) {\n            case 0:\n                colour = \"Blue\";\n                break;\n            case 1:\n                colour = \"Yellow\";\n                break;\n            case 2:\n                colour = \"Red\";\n                break;\n            case 3:\n                colour = \"Green\";\n                break;\n        }\n        this.users.push(new User(user, colour));\n        this.assignPieces();\n    },\n    assignPieces: function() {\n        for (var user of this.users) {\n            user.pieces = new PresetPieces().generatePieces();\n        }\n    },\n    placePiece: function(e, pieceRel) {\n        if (this.playing) {\n\n            var cPos = null;\n            if(!this.logPlaying) {\n                cPos = this.render.getMousePos(e);\n            } else {\n                cPos = e;\n            }\n            var curUser = this.users[this.currentUser];\n            var curPiece = null;\n            if (pieceRel) {\n                curPiece = new GamePiece(pieceRel);\n            } else {\n                curPiece = curUser.getSelectedPiece();\n            }\n            if (this.board.placePiece([cPos.y, cPos.x], curPiece, curUser.colourCode())) {\n                new Audio('metal_off_switch.mp3').play();\n                curUser.removeSelectedPiece();\n                this.render.redraw(this.board.boardArray);\n                this.nextPlayer();\n                if (!this.logPlaying) {\n                    this.log.addData('place', {pos:cPos, rel:curPiece.relative});\n                }\n                this.displayScoreBoard();\n            } else {\n                new Audio('single_oil_can.mp3').play();\n            }\n        }\n    },\n    nextPlayer: function() {\n        if (this.checkPlayersPlaying()) {\n            this.currentUser++;\n            if (this.currentUser >= this.users.length) {\n                this.currentUser = 0;\n            }\n            if (!this.checkPlayerPlaying(this.currentUser)) {\n                this.nextPlayer();\n            }\n            var currUser = this.currUser();\n            this.selectRenderEngine.redraw(currUser.pieces, currUser.colourCode());\n        } else {\n            this.playing = false;\n            this.render.redraw(this.board.boardArray);\n            var winners = this.findWinner();\n            var winnerString = '';\n            if (winners.length === 1) {\n                winnerString = winners[0].name + ' is the winner - congratulations ' + winners[0].name + '!';\n            } else if (winners.length === 2) {\n                winnerString = 'The game is tied; ' + winners[0].name + ' and ' + winners[1].name + ' are the winners - congratulations!';\n            } else if (winners.length === 3) {\n                winnerString = 'The game is tied; ' + winners[0].name + ', ' + winners[1].name + ' and ' + winners[2].name + ' have won - congratulations!';\n            } else {\n                winnerString = 'The game is tied; you are all winners! (or losers depending on how you look at it)';\n            }\n        alert(winnerString);\n        }\n    },\n    findWinner: function() {\n        var userObjects = [];\n        for (var i = 0; i < this.users.length; i++) {\n            userObjects.push({\n                name: this.users[i].name,\n                score: this.board[this.users[i].colourCode()]\n            });\n        }\n        userObjects.sort(function(a,b) {\n            if (a.score > b.score) {\n                return 1;\n            }\n            if (a.score < b.score) {\n                return -1;\n            }\n            return 0;\n        });\n        var firstWinner = userObjects[3];\n        var winners = [];\n        userObjects.splice(3,1);\n        for (var user of userObjects) {\n            if (user.score === firstWinner.score) {\n                winners.push(user);\n            }\n        }\n        winners.push(firstWinner);\n        return winners;\n    },\n    checkPlayerPlaying: function(index) {\n        return this.users[index].playing;\n    },\n    checkPlayersPlaying: function() {\n        var count = 0;\n        for (var i = 0; i < this.users.length; i++) {\n            if (!this.checkPlayerPlaying(i)) {\n                count++;\n            }\n        }\n        if (count < this.users.length) {\n            return true;\n        }\n        return false;\n    },\n    currUser: function() {\n        return this.users[this.currentUser];\n    },\n    onHover: function(e) {\n        if (this.playing) {\n            var curUser = this.currUser();\n            if (curUser.getSelectedPiece()) {\n                this.render.redraw(this.board.boardArray, e, curUser.colourCode(), curUser.getSelectedPiece().relative);\n            }\n        }\n    },\n    rotatePiece: function() {\n        if (this.playing) {\n            this.currUser().rotatePiece();\n        }\n    },\n    flipPiece: function() {\n        if (this.playing) {\n            this.currUser().flipPiece();\n        }\n    },\n    redraw: function() {\n        this.render.redraw(this.board.boardArray);\n        var currUser = this.currUser();\n        if (currUser) {\n            this.selectRenderEngine.redraw(currUser.pieces, currUser.colourCode());\n        }\n    },\n    skipTurn: function() {\n        if (this.playing) {\n            this.currUser().endPlay();\n            this.nextPlayer();\n            if (!this.logPlaying) {\n                this.log.addData('skip', null);\n            }\n        }\n    },\n    saveLog: function() {\n        this.log.saveData();\n    },\n    loadLog: function(uid) {\n        this.uID = uid;\n        this.log.setGameID(uid);\n        this.log.loadData(this.playFromLog, this);\n    },\n    playFromLog: function(logData, context) {\n        context.log.setData(logData.data);\n        context.users = [];\n        context.logPlaying = true;\n        context.playThrough(context);\n    },\n    playThrough: function(context) {\n        var data = context.log.grabData();\n        if (data) {\n            context.makeLogMove(data.action, data.options, context);\n            setTimeout(function() {\n                context.playThrough(context);\n            }, 500);\n        } else {\n            context.logPlaying = false;\n        }\n    },\n    makeLogMove: function(action, options, game) {\n        switch (action) {\n            case 'place':\n                game.placePiece(options.pos, options.rel);\n                break;\n            case 'skip':\n                game.skipTurn();\n                break;\n            case 'username':\n                game.createUser(options);\n                break;\n        }\n    },\n    userSelectPiece: function(e) {\n        var index = this.selectRenderEngine.getClickBox(this.selectRenderEngine.getMousePos(e));\n        var currentUser = this.currUser();\n        currentUser.selectPiece(index);\n        new Audio(\"double_down_click.mp3\").play();\n    },\n    displayScoreBoard: function() {\n\n        var users = this.users;\n        if (users.length > 0) {\n            var currUser = this.currentUser;\n            var blue = document.getElementById(\"blue_player\");\n            var yellow = document.getElementById(\"yellow_player\");\n            var red = document.getElementById(\"red_player\");\n            var green = document.getElementById(\"green_player\");\n            var blue_score = document.getElementById('blue_score');\n            var yellow_score = document.getElementById('yellow_score');\n            var red_score = document.getElementById('red_score');\n            var green_score = document.getElementById('green_score');\n\n\n            blue.innerText = users[0].name;\n            yellow.innerText = users[1].name;\n            red.innerText = users[2].name;\n            green.innerText = users[3].name;\n\n            blue_score.innerText = this.board[this.users[0].colourCode()];\n            yellow_score.innerText = this.board[this.users[1].colourCode()];\n            red_score.innerText = this.board[this.users[2].colourCode()];\n            green_score.innerText = this.board[this.users[3].colourCode()];\n        }\n\n    }\n};\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/models/game.js\n ** module id = 3\n ** module chunks = 0\n **/","var GameBoard = function() {\n    // this.board = new Array(20);\n    // for (var i = 0; i < 20; i++) {\n    //   this.board[i] = new Array(20);\n    // }\n    this.boardArray = this.generateBoardArray();\n    this.R = 0;\n    this.G = 0;\n    this.B = 0;\n    this.Y = 0;\n};\n\nGameBoard.prototype = {\n    generateBoardArray: function(){\n        var array = new Array(20);\n        for (var i = 0; i < 20; i++) {\n            array[i] = new Array(20);\n            for (var j = 0; j < 20; j++) {\n                array[i][j] = null;\n            }\n        }\n        return array;\n    },\n    fill: function(coordinates, colourString) {\n        this.boardArray[coordinates[0]][coordinates[1]] = colourString;\n        this.updateColourCount(colourString);\n    },\n    inBounds: function(coordinates) {\n        if (this.boardArray[coordinates[0]]) {\n            if (this.boardArray[coordinates[0]][coordinates[1]] !== undefined) {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    },\n    listInBounds: function(coordinatesList) {\n        var inBoundsCoords = [];\n        for (var coordPair of coordinatesList) {\n            if (this.inBounds(coordPair)) {\n                inBoundsCoords.push(coordPair);\n            }\n        }\n        return inBoundsCoords;\n    },\n\n    isInBounds: function(coordinatesList){\n        if(this.listInBounds(coordinatesList).length === coordinatesList.length){\n            return true;\n        } else {\n            return false;\n        }\n\n    },\n\n    updateColourCount: function(colourString) {\n        this[colourString] += 1;\n    },\n    checkSquare: function(coordinatePair, userColour) {\n        var square = this.boardArray[coordinatePair[0]][coordinatePair[1]];\n        if (userColour) {\n            if (square === userColour) {\n                return true;\n            }\n        } else {\n            if (!square) {\n                return true;\n            }\n        }\n        return false;\n    },\n    checkSquaresAvailable: function(coordinatesList) {\n        for (var coordPair of coordinatesList) {\n            if (!this.checkSquare(coordPair)) {\n                return false;\n            }\n        }\n        return true;\n    },\n    checkCorners: function (coordinatesList, userColour) {\n        var foundValidCorner = false;\n        for (var coordPair of coordinatesList) {\n            if (this.checkSquare(coordPair, userColour)) {\n                foundValidCorner = true;\n            }\n        }\n        return foundValidCorner;\n    },\n\n    checkEdges: function( coordinatesList, userColour) {\n        return !this.checkCorners(coordinatesList, userColour);\n    },\n\n    isLegal: function( coordinates, piece, userColour ){\n        if (this[userColour] === 0) {\n\n            if(!this.cornerSquare(piece.covered(coordinates))) {\n                return false;\n            }\n        }\n        if(this.isInBounds(piece.covered(coordinates))){\n            if(this.checkSquaresAvailable(piece.covered(coordinates))){\n                if(this.checkEdges(this.listInBounds(piece.flats(coordinates)), userColour)){\n                    if(this[userColour] === 0 || this.checkCorners(this.listInBounds(piece.corners(coordinates)), userColour)){\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    cornerSquare: function( coordinatesList ){\n        for( var item of coordinatesList ){\n            if( (item[0] === 0 && item[1] === 0) || ( item[0] === 0 && item[1] === 19) || (item[0] === 19 && item[1] === 0) || (item[0] === 19 && item[1] === 19)){\n                return true;\n            }\n        }\n        return false;\n    },\n\n    placePiece: function(coordinates, piece, userColour){\n        if (this.isLegal(coordinates, piece, userColour)) {\n            for (var pair of piece.covered(coordinates)) {\n                this.fill(pair, userColour);\n            }\n            return true;\n        }\n        return false;\n    }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmodule.exports = GameBoard;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/models/gameboard.js\n ** module id = 4\n ** module chunks = 0\n **/","var GamePiece = require('./gamepiece.js');\n\nvar PresetPieces = function() {\n    this.rels = [\n        [[ ], [ ], [2], [ ], [ ]],\n        [[ ], [ ], [2,3], [ ], [ ]],\n        [[ ], [ ], [1,2], [2], [ ]],\n        [[ ], [ ], [1,2,3], [ ], [ ]],\n        [[ ], [ 2,3], [2,3], [ ], [ ]],\n        [[ ], [2], [1,2,3], [ ], [ ]],\n        [[ ], [ ], [1,2,3,4], [ ], [ ]],\n        [[ ], [3], [1,2,3], [ ], [ ]],\n        [[ ], [2,3], [1,2], [ ], [ ]],\n        [[ ], [1], [1,2,3,4], [ ], [ ]],\n        [[ ], [2], [2], [1,2,3 ], [ ]],\n        [[2], [2], [2,3,4], [ ], [ ]],\n        [[ ], [ ], [2,3,4], [1,2 ], [ ]],\n        [[ ], [3], [1,2,3], [1], [ ]],\n        [[2], [2], [2], [2], [2]],\n        [[ ], [2], [2,3], [2,3], [ ]],\n        [[ ], [2,3], [1,2], [1], [ ]],\n        [[ ], [2,3], [2], [2,3], [ ]],\n        [[ ], [ 2,3], [1,2], [ 1], [ ]],\n        [[ ], [2], [1,2,3], [2], [ ]],\n        [[ ], [2], [1,2,3,4], [ ], [ ]]\n    ];\n};\n\nPresetPieces.prototype = {\n    generatePieces: function() {\n        var pieces = [];\n        for (var i = 0; i < this.rels.length; i++) {\n            pieces.push(new GamePiece(this.rels[i]));\n        }\n        return pieces;\n    }\n};\n\nmodule.exports = PresetPieces;\n\n// ONE           = [[ ],\n//                  [ ],\n//                  [2],\n//                  [ ],\n//                  [ ]];\n//\n// TWO           = [[ ],\n//                 [ ],\n//                 [2,3],\n//                 [ ],\n//                 [ ]];\n//\n// THREE         = [[ ],\n//                  [ ],\n//                  [1,2],\n//                  [ 2],\n//                  [ ]];\n//\n// FOUR            = [[ ],\n//                   [ ],\n//                   [1,2,3],\n//                   [ ],\n//                   [ ]];\n//\n// FIVE          = [[ ],\n//                  [ 2,3],\n//                  [2,3],\n//                  [ ],\n//                  [ ]];\n//\n// SIX          = [[ ],\n//                 [ 2],\n//                 [1,2,3],\n//                 [ ],\n//                 [ ]]\n//\n// SEVEN        = [[ ],\n//                 [ ],\n//                 [1,2,3,4],\n//                 [ ],\n//                 [ ]];\n//\n// EIGHT        = [[ ],\n//                 [ 3],\n//                 [1,2,3],\n//                 [ ],\n//                 [ ]]\n//\n// NINE         = [[ ],\n//                 [ 2,3],\n//                 [1,2],\n//                 [ ],\n//                 [ ]]\n//\n// TEN          = [[ ],\n//                 [ 1],\n//                 [1,2,3,4],\n//                 [ ],\n//                 [ ]]\n//\n// ELEVEN        = [[ ],\n//                 [ 2],\n//                 [2],\n//                 [1,2,3 ],\n//                 [ ]]\n//\n// TWELVE       = [[2 ],\n//                 [ 2],\n//                 [2,3,4],\n//                 [ ],\n//                 [ ]]\n//\n// THIRTEEN     = [[ ],\n//                 [ ],\n//                 [2,3,4],\n//                 [1,2 ],\n//                 [ ]]\n//\n// FOURTEEN     = [[ ],\n//                 [ 3],\n//                 [1,2,3],\n//                 [ 1],\n//                 [ ]]\n//\n// FIFTEEN      = [[ 2],\n//                 [ 2],\n//                 [2],\n//                 [ 2],\n//                 [ 2]]\n//\n// SIXTEEN      = [[ ],\n//                 [ 2],\n//                 [2,3],\n//                 [ 2,3],\n//                 [ ]]\n//\n// SEVENTEEN    = [[ ],\n//                 [ 2,3],\n//                 [1,2],\n//                 [ 1],\n//                 [ ]]\n//\n// EIGHTEEN     = [[ ],\n//                 [ 2,3],\n//                 [2],\n//                 [ 2,3],\n//                 [ ]]\n//\n// NINETEEN     = [[ ],\n//                 [ 2,3],\n//                 [1,2],\n//                 [ 1],\n//                 [ ]]\n//\n// TWENTY       = [[ ],\n//                 [ 2],\n//                 [1,2,3],\n//                 [ 2],\n//                 [ ]]\n//\n// TWENTY-ONE   = [[ ],\n//                 [ 2],\n//                 [1,2,3,4],\n//                 [ ],\n//                 [ ]]\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/models/pieceRels.js\n ** module id = 5\n ** module chunks = 0\n **/","var User = function(name, colour) {\n    this.name = name;\n    this.colour = colour;\n    this.pieces = [];\n    this.selectedPieceIndex = null;\n    this.playing = true;\n};\n\nUser.prototype = {\n\n    colourCode: function() {\n        return this.colour[0].toUpperCase();\n    },\n    selectPiece: function(pieceIndex) {\n        if (this.pieces[pieceIndex]) {\n            this.selectedPieceIndex = pieceIndex;\n        }\n    },\n    getSelectedPiece: function() {\n        return this.pieces[this.selectedPieceIndex];\n    },\n    rotatePiece: function() {\n        this.pieces[this.selectedPieceIndex].rotate();\n    },\n    flipPiece: function() {\n        this.pieces[this.selectedPieceIndex].flip();\n    },\n    removeSelectedPiece: function() {\n        this.pieces.splice(this.selectedPieceIndex, 1);\n        this.selectedPieceIndex = null;\n        if (this.pieces.length === 0) {\n            this.playing = false;\n        }\n    },\n    endPlay: function() {\n        this.playing = false;\n    }\n};\n\nmodule.exports = User;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/models/user.js\n ** module id = 6\n ** module chunks = 0\n **/","var Log = function() {\n      this.data = [];\n      this.currentIndex = 0;\n      this.gameID = null;\n};\n\nLog.prototype = {\n\n    setGameID: function(id) {\n        this.gameID = id;\n    },\n    addData: function(action, options) {\n        this.data.push({action: action, options: options});//action = skip or place; options = rel + position\n    },\n    grabData: function() {\n        var data = this.data[this.currentIndex];\n        this.nextIndex();\n        return data;\n    },\n    nextIndex: function() {\n        this.currentIndex++;\n        if (this.currentIndex === this.data.length) {\n          this.currentIndex = null;\n        }\n    },\n    saveData: function() {\n        var request = new XMLHttpRequest();\n        request.open('POST', 'savelog');\n        request.setRequestHeader('Content-Type', 'application/json');\n        var data = {game: this.gameID, data: this.data};\n        request.send(JSON.stringify(data));\n    },\n    loadData: function(callback, context) {\n        var request = new XMLHttpRequest();\n        request.onload = function() {\n            if (request.status === 200) {\n                callback(JSON.parse(request.responseText)[0], context);\n            }\n        };\n        request.open('POST', 'loadlog');\n        request.setRequestHeader('Content-Type', 'application/json');\n        request.send(JSON.stringify({game: this.gameID}));\n    },\n    setData: function(data) {\n        this.data = data;\n    }\n};\nmodule.exports = Log;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/models/log.js\n ** module id = 7\n ** module chunks = 0\n **/","var SelectRenderEngine = function(element, height, width) {\n    this.canvas = element;\n    this.canvas.height = height;\n    this.canvas.width = width;\n    this.context = this.canvas.getContext('2d');\n    this.xScale = width / 13;\n    this.yScale = height / 67;\n    this.selectBoard = this.generateArray();\n};\n\nSelectRenderEngine.prototype = {\n    fillBox: function(x, y, colour) {\n        this.context.fillStyle = colour.light;\n        this.context.fillRect(x*this.xScale, y*this.yScale, this.xScale, this.yScale);\n        // this.context.fillStyle = colour.dark;\n        // this.context.fillRect((x*this.xScale)+3, (y*this.yScale)+3, this.xScale-6, this.yScale-6);\n        // this.context.fillStyle = colour.light;\n        // this.context.fillRect((x*this.xScale)+5, (y*this.yScale)+5, this.xScale-10, this.yScale-10);\n    },\n    fillBoard: function(board) {\n        for (var y = 0; y < board.length; y++) {\n            for (var x = 0; x < board[y].length; x++) {\n                this.fillBox(x,y,this.getUserColour(board[y][x]));\n            }\n        }\n    },\n    getMousePos: function(e) {\n        var rect = this.canvas.getBoundingClientRect();\n        var tPadding = parseInt(window.getComputedStyle(this.canvas, null).getPropertyValue('padding-left'));\n        var lPadding = parseInt(window.getComputedStyle(this.canvas, null).getPropertyValue('padding-top'));\n        x = e.clientX - rect.left - lPadding;\n        y = e.clientY - rect.top - tPadding;\n        return {x: parseInt(x / this.xScale), y: parseInt(y / this.yScale)};\n    },\n    redraw: function(pieces, userColour) {\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.selectBoard = this.generateArray();\n        this.placePieces(this.generateCenterCoordinates(), pieces, userColour);\n        this.fillBoard(this.selectBoard);\n        this.drawGrid();\n    },\n    generateArray: function() {\n        var array = new Array(67);\n        for (var i = 0; i < 67; i++) {\n            array[i] = new Array(13);\n            for (var j = 0; j < 13; j++) {\n                array[i][j] = null;\n            }\n        }\n        return array;\n    },\n    highlightBox: function(pos, userColour, piece) {\n        this.context.beginPath();\n        this.context.strokeStyle = this.getUserColour(userColour).light;\n        this.context.lineWidth = this.scale / 5;\n        var x = pos.x - 2;\n        var y = pos.y - 2;\n        for (var i = 0; i < piece.length; i++) {\n            if (piece[i]) {\n                for (var j = 0; j < piece[i].length; j++) {\n                    this.drawBoxPart(x + piece[i][j], y+i, 'top');\n                    this.drawBoxPart(x + piece[i][j], y+i, 'bottom');\n                    this.drawBoxPart(x + piece[i][j], y+i, 'left');\n                    this.drawBoxPart(x + piece[i][j], y+i, 'right');\n                }\n            }\n        }\n        this.context.stroke();\n        this.context.lineWidth = 1;\n    },\n    drawBoxPart: function(x, y, box) {\n        x *= this.scale;\n        y *= this.scale;\n        switch (box) {\n            case 'top':\n                this.context.moveTo(x + 1, y + 1);\n                this.context.lineTo(x + (this.scale-1), y + 1);\n                break;\n            case 'left':\n                this.context.moveTo(x + 1, y + 1);\n                this.context.lineTo(x + 1, y + (this.scale-1));\n                break;\n            case 'right':\n                this.context.moveTo(x + (this.scale-1), y + 1);\n                this.context.lineTo(x + (this.scale-1), y + (this.scale-1));\n                break;\n            case 'bottom':\n                this.context.moveTo(x + 1, y + (this.scale-1));\n                this.context.lineTo(x + (this.scale-1), y + (this.scale-1));\n                break;\n        }\n    },\n    drawGrid: function() {\n        this.context.beginPath();\n        var x = 0;\n        while ( x <= this.canvas.width ) {\n            this.context.strokeStyle = \"#837E7C\";\n            this.context.moveTo(x,0);\n            this.context.lineTo(x, this.canvas.height);\n\n            x += this.xScale;\n        }\n        var y = 0;\n        while ( y <= this.canvas.height ) {\n            this.context.strokeStyle = \"#000000\";\n            this.context.moveTo(0,y);\n            this.context.lineTo(this.canvas.width, y);\n            y += this.yScale;\n        }\n        this.context.stroke();\n    },\n    getUserColour: function(colour) {\n        switch (colour) {\n            case 'R':\n                return {light: '#F62217', dark: '#800517'};\n            case 'G':\n                return {light: '#4CC417', dark: '#437C17'};\n            case 'B':\n                return {light: '#488AC7', dark: '#1F45FC'};\n            case 'Y':\n                return {light: '#FFFF00', dark: '#C68E17'};\n            default:\n                return {light: '#FFFFFF', dark: '#E5E4E2'};\n        }\n    },\n    fill: function(coordinates, colourString) {\n        this.selectBoard[coordinates[0]][coordinates[1]] = colourString;\n    },\n    placePieces: function(coordinates, pieces, userColour) {\n        for (var i = 0; i < pieces.length; i++) {\n            this.placePiece(coordinates[i], pieces[i], userColour);\n        }\n    },\n    placePiece: function(coordinates, piece, userColour){\n        for (var pair of piece.covered(coordinates)) {\n            this.fill(pair, userColour);\n        }\n    },\n    generateCenterCoordinates: function() {\n\n        var array = [];\n\n        for (var i = 0; i < 61; i+=6) {\n            array.push([(i+3), 3]);\n            array.push([(i+3), 9]);\n        }\n\n        array.pop();\n        return array;\n    },\n    getClickBox: function(pos) {\n        var index = 0;\n        for (var x = 0; x < 11; x++) {\n            if (pos.x > 0 && pos.x < 6) {\n                if (pos.y > (6*x)+1 && pos.y < (6*x)+5) {\n                    return index;\n                }\n            }\n            index++;\n            if (pos.x > 6 && pos.x < 12) {\n                if (pos.y > (6*x)+1 && pos.y < (6*x)+5) {\n                    return index;\n                }\n            }\n            index++;\n        }\n    }\n};\n\nmodule.exports = SelectRenderEngine;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/models/selectrenderengine.js\n ** module id = 9\n ** module chunks = 0\n **/"],"sourceRoot":""}