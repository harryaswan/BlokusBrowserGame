{"version":3,"sources":["webpack:///webpack/bootstrap 4c8651abc15c7f0cc361","webpack:///./src/index.js","webpack:///./src/models/gamepiece.js","webpack:///./src/models/renderengine.js","webpack:///./src/models/game.js","webpack:///./src/models/gameboard.js","webpack:///./src/models/pieceRels.js","webpack:///./src/models/user.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;;;;;;;AC1CA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,wBAAuB,uBAAuB;AAC9C,4BAA2B,0BAA0B;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,wBAAuB,uBAAuB;AAC9C,4BAA2B,0BAA0B;;AAErD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,wBAAuB,uBAAuB;AAC9C,4BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,wBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,wBAAuB,QAAQ;AAC/B,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,uBAAsB;AACtB;AACA;AACA,MAAK;AACL;AACA;AACA,wBAAuB,uBAAuB;AAC9C,4BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACnLA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,wBAAuB,kBAAkB;AACzC,4BAA2B,qBAAqB;AAChD;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,iBAAgB;AAChB,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,kBAAkB;AACzC;AACA,gCAA+B,qBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA,uCAAsC;AACtC;AACA;AACA,KAAI;;;;;;;AChIJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;;;;;;;AClEA;AACA;AACA,uBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,QAAQ;AAC/B;AACA,4BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;ACtJA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAspKA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4c8651abc15c7f0cc361\n **/","var Game = require('./models/game.js');\nvar User = require('./models/user.js');\n\nwindow.onload = function(e) {\n\n    var canvas = document.getElementById('gameboard');\n    var users = [];\n    users.push(new User(\"Jimmy\", \"Red\"));\n    users.push(new User(\"John\", \"Blue\"));\n    users.push(new User(\"Frank\", \"Green\"));\n    users.push(new User(\"Colin\", \"Yellow\"));\n    var game = new Game(users, canvas, 600);\n\n    game.redraw();\n\n    canvas.addEventListener('click', function(e) {\n        game.placePiece(e);\n        // var cPos = game.render.getMousePos(e);\n        // var curUser = game.users[game.currentUser];\n        // console.log('test',curUser.getSelectedPiece());\n        // if (game.placePiece([cPos.y, cPos.x], curUser.getSelectedPiece(), curUser.colourCode(), game)) {\n        //     console.log('placed');\n        //     curUser.removeSelectedPiece();\n        //     game.render.redraw(game.board.boardArray);\n        //     game.nextPlayer();\n        // } else {\n        //     console.log('not placed');\n        // }\n    });\n\n    canvas.addEventListener('mousemove', function(e) {\n        game.onHover(e);\n    });\n\n    window.addEventListener('keyup', function(e) {\n        if (e.keyCode === 82) {\n            game.rotatePiece();\n        } else if (ee.keyCode === 70) {\n            game.flipPiece();\n        }\n    });\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.js\n ** module id = 0\n ** module chunks = 0\n **/","var GamePiece = function(tiles) {\n    this.relative = tiles;\n    this.array = this.generateArray();\n    this.setup(tiles);\n\n};\n\nGamePiece.prototype = {\n\n    setup: function(input) {\n        for (var array of input) {\n            if (array.length > 0) {\n                for (var element of array) {\n                    this.changeTile(element, input.indexOf(array), 1);\n                }\n            }\n        }\n    },\n    changeTile: function(x, y, value) {\n        this.array[y][x] = value;\n    },\n    corners: function(coordinates) {\n        var startY = coordinates[0] - 2;\n        var startX = coordinates[1] - 2;\n        var corners = [];\n        for (var y = 0; y < this.array.length; y++) {\n            for (var x = 0; x < this.array[y].length; x++) {\n\n                if (this.array[y][x]) {\n                    if (this.array[y + 1]) {\n                        if (!this.array[y][x + 1] && !this.array[y + 1][x]) {\n                            corners.push([startY + y + 1, startX + x + 1]);\n                        }\n                        if (!this.array[y][x - 1] && !this.array[y + 1][x]) {\n                            corners.push([startY + y + 1, startX + x - 1]);\n                        }\n                    } else if (this.array[y + 1] === undefined) {\n                        if (!this.array[y][x + 1]) {\n                            corners.push([startY + y + 1, startX + x + 1]);\n                        }\n                        if (!this.array[y][x - 1]) {\n                            corners.push([startY + y + 1, startX + x - 1]);\n                        }\n                    }\n\n                    if (this.array[y - 1]) {\n                        if (!this.array[y][x + 1] && !this.array[y - 1][x]) {\n                            corners.push([startY + y - 1, startX + x + 1]);\n                        }\n                        if (!this.array[y][x - 1] && !this.array[y - 1][x]) {\n                            corners.push([startY + y - 1, startX + x - 1]);\n                        }\n                    } else if (this.array[y -1] === undefined) {\n                        if (!this.array[y][x + 1]) {\n                            corners.push([startY + y - 1, startX + x + 1]);\n                        }\n                        if (!this.array[y][x - 1]) {\n                            corners.push([startY + y - 1, startX + x - 1]);\n                        }\n                    }\n                }\n            }\n        }\n        return this.unique(corners);\n    },\n\n    flats: function(coordinates) {\n        var startY = coordinates[0] - 2;\n        var startX = coordinates[1] - 2;\n        var flatsArray = [];\n        for (var y = 0; y < this.array.length; y++) {\n            for (var x = 0; x < this.array[y].length; x++) {\n\n                if (this.array[y][x]) {\n\n                      if (!this.array[y][x + 1]) {\n                          flatsArray.push([startY + y, startX + x + 1]);\n                      }\n\n                      if (!this.array[y][x - 1]) {\n                          flatsArray.push([startY + y, startX + x - 1]);\n                      }\n\n                      if (this.array[y + 1]){\n                        if (!this.array[y + 1][x] || this.array[y + 1][x] === undefined) {\n                          flatsArray.push([startY + y + 1, startX + x]);\n                        }\n                      }else{\n                        flatsArray.push([startY + y + 1, startX + x]);\n                      }\n\n                      if (this.array[y - 1]){\n                        if (!this.array[y - 1][x] || this.array[y - 1][x] === undefined) {\n\n                          flatsArray.push([startY + y - 1, startX + x]);\n                        }\n                      }else{\n                        flatsArray.push([startY + y - 1, startX + x]);\n                      }\n                }\n            }\n        }\n        return this.unique(flatsArray);\n    },\n\n    covered: function(coordinates) {\n        var startY = coordinates[0] - 2;\n        var startX = coordinates[1] - 2;\n        coveredSquares = [];\n        for (var y = 0; y < this.array.length; y++) {\n            for (var x = 0; x < this.array[y].length; x++) {\n                if (this.array[y][x]) {\n                    coveredSquares.push([startY + y, startX + x]);\n                }\n            }\n        }\n        return coveredSquares;\n    },\n\n    unique: function(array){\n       var uniqueArray = [];\n       for (var item of array){\n          if (!this.isItemInArray(uniqueArray, item)){\n            uniqueArray.push(item);\n          }\n       }\n       return uniqueArray;\n    },\n\n  isItemInArray: function(array, item) {\n        for (var i = 0; i < array.length; i++) {\n            if (array[i][0] == item[0] && array[i][1] == item[1]) {\n                return true;\n            }\n        }\n        return false;\n    },\n    rotate: function() {\n        var rotatedArray = this.generateArray();\n        for (var x = 4; x > -1; x--) {\n            for (var y = 0; y < 5; y++) {\n                var newY = y - 4;\n                if (newY < 0) {\n                    newY = newY * -1;\n                }\n                rotatedArray[x][y] = this.array[newY][x];\n            }\n        }\n        this.array = rotatedArray;\n        this.getRel();\n    },\n    flip: function() { // NOTE: do we want just vertical flip - do we want horizontal flip also\n        this.array = this.array.reverse();\n        this.getRel();\n    }, // NOTE: horizontal flip could be done by rotate twice and then flip ( no new functions required)\n    getRel: function() {\n        var rel = [[],[],[],[],[]];\n        for (var y = 0; y < this.array.length; y++) {\n            for (var x = 0; x < this.array[y].length; x++) {\n                if (this.array[y][x]) {\n                    rel[y].push(x);\n                }\n            }\n        }\n        this.relative = rel;\n        return this.relative;\n    },\n    generateArray: function(){\n        var array = new Array(5);\n        for (var i = 0; i < 5; i++) {\n            array[i] = new Array(5);\n            for (var j = 0; j < 5; j++) {\n                array[i][j] = 0;\n            }\n        }\n        return array;\n    }\n\n};\nmodule.exports = GamePiece;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/models/gamepiece.js\n ** module id = 1\n ** module chunks = 0\n **/","var RenderEngine = function(element, heightWidth) {\n    this.canvas = element;\n    this.canvas.height = heightWidth;\n    this.canvas.width = heightWidth;\n    this.context = this.canvas.getContext('2d');\n    this.scale = heightWidth / 20;\n};\n\nRenderEngine.prototype = {\n    fillBox: function(x, y, colour) {\n        this.context.fillStyle = colour;\n        this.context.fillRect(x*this.scale, y*this.scale, this.scale, this.scale);\n    },\n    fillBoard: function(board) {\n        for (var y = 0; y < board.length; y++) {\n            for (var x = 0; x < board[y].length; x++) {\n                this.fillBox(x,y,this.getUserColour(board[y][x]));\n            }\n        }\n    },\n    getMousePos: function(e) {\n        var rect = this.canvas.getBoundingClientRect();\n        x = e.clientX - rect.left;\n        y = e.clientY - rect.top;\n        return {x: parseInt(x / this.scale), y: parseInt(y / this.scale)};\n    },\n    redraw: function(board, mouseEvent, userColour, piece) {\n        var curPos = null;\n        if (mouseEvent) {\n            curPos = this.getMousePos(mouseEvent);\n        }\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.fillBoard(board);\n        if (curPos &&  userColour &&piece) {\n            this.highlightBox(curPos, userColour, piece);\n        }\n        this.drawGrid();\n    },\n    highlightBox: function(pos, userColour, piece) {\n        this.context.beginPath();\n        this.context.strokeStyle = this.getUserColour(userColour);\n        this.context.lineWidth = this.scale / 5;\n        var x = pos.x - 2;\n        var y = pos.y - 2;\n        for (var i = 0; i < piece.length; i++) {\n            if (piece[i]) {\n                for (var j = 0; j < piece[i].length; j++) {\n                    this.drawBoxPart(x + piece[i][j], y+i, 'top');\n                    this.drawBoxPart(x + piece[i][j], y+i, 'bottom');\n                    this.drawBoxPart(x + piece[i][j], y+i, 'left');\n                    this.drawBoxPart(x + piece[i][j], y+i, 'right');\n                }\n            }\n        }\n        this.context.stroke();\n        this.context.lineWidth = 1;\n    },\n    drawBoxPart: function(x, y, box) {\n        x *= this.scale;\n        y *= this.scale;\n        switch (box) {\n            case 'top':\n                this.context.moveTo(x + 1, y + 1);\n                this.context.lineTo(x + (this.scale-1), y + 1);\n                break;\n            case 'left':\n                this.context.moveTo(x + 1, y + 1);\n                this.context.lineTo(x + 1, y + (this.scale-1));\n                break;\n            case 'right':\n                this.context.moveTo(x + (this.scale-1), y + 1);\n                this.context.lineTo(x + (this.scale-1), y + (this.scale-1));\n                break;\n            case 'bottom':\n                this.context.moveTo(x + 1, y + (this.scale-1));\n                this.context.lineTo(x + (this.scale-1), y + (this.scale-1));\n                break;\n        }\n    },\n    drawGrid: function() {\n        this.context.beginPath();\n        var i = 0;\n        while ( i <= this.canvas.width ) {\n            this.context.strokeStyle = \"black\";\n            this.context.moveTo(i,0);\n            this.context.lineTo(i, this.canvas.height);\n            this.context.moveTo(0,i);\n            this.context.lineTo(this.canvas.width, i);\n            i = i + this.scale;\n        }\n        this.context.stroke();\n    },\n    getUserColour: function(colour) {\n        switch (colour) {\n            case 'R':\n                return 'red';\n            case 'G':\n                return 'green';\n            case 'B':\n                return 'blue';\n            case 'Y':\n                return 'yellow';\n            default:\n                return 'white';\n        }\n    }\n};\n\nmodule.exports = RenderEngine;\n\n// canvas.addEventListener('mousemove', function(e) {\n//     var pieceRel = [\n//         [2],\n//         [2],\n//         [2],\n//         [2,3],\n//         []\n//     ];\n//     var userColour = \"green\"; // grab colour from current user\n//\n//     render.redraw(board, e, userColour, pieceRel);\n// });\n//\n// canvas.addEventListener('click', function(e) {\n//     var cPos = render.getMousePos(e);\n//     board[cPos.y][cPos.x] = \"blue\"; // grab colour from current user\n//     console.log(board);\n//     render.redraw(board, e);\n// });\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/models/renderengine.js\n ** module id = 2\n ** module chunks = 0\n **/","var GameBoard = require('./gameboard.js');\nvar RenderEngine = require('./renderengine.js');\nvar PresetPieces = require('./pieceRels.js');\n\nvar Game = function(users, canvasElement, canvasWidth) {\n    this.users = users;\n    this.currentUser = 0;\n    this.board = new GameBoard();\n    this.render = new RenderEngine(canvasElement, canvasWidth);\n    this.assignPieces();\n};\n\nGame.prototype = {\n\n    assignPieces: function() {\n        for (var user of this.users) {\n            user.pieces = new PresetPieces().generatePieces();\n        }\n    },\n    // placePiece: function(e, game) {\n    //     var cPos = game.render.getMousePos(e);\n    //     var curUser = game.users[game.currentUser];\n    //     if (game.board.placePiece([cPos.y, cPos.x], curUser.getSelectedPiece(), curUser.getColourCode())) {\n    //         curUser.removeSelectedPiece();\n    //         game.render.redraw(game.board.boardArray);\n    //         game.nextPlayer();\n    //     }\n    // },\n    // placePiece: function(coordinates, piece, colour, game) {\n    placePiece: function(e) {\n        var cPos = this.render.getMousePos(e);\n        var curUser = this.users[this.currentUser];\n        if (this.board.placePiece([cPos.y, cPos.x], curUser.getSelectedPiece(), curUser.colourCode())) {\n            curUser.removeSelectedPiece();\n            this.render.redraw(this.board.boardArray);\n            this.nextPlayer();\n        } else {\n            console.log('invalid move');\n        }\n    },\n    nextPlayer: function() {\n        this.currentUser++;\n        if (this.currentUser >= this.users.length) {\n            this.currentUser = 0;\n        }\n    },\n    currUser: function() {\n        return this.users[this.currentUser];\n    },\n    onHover: function(e) {\n        var curUser = this.currUser();\n        this.render.redraw(this.board.boardArray, e, curUser.colourCode(), curUser.getSelectedPiece().relative);\n    },\n    rotatePiece: function() {\n        this.currUser().rotatePiece();\n        // this.redraw(this.board.boardArray, e, curUser.colourCode(), curUser.getSelectedPiece().relative);\n    },\n    flipPiece: function() {\n        this.currUser().rotatePiece();\n    },\n    redraw: function() {\n        this.render.redraw(this.board.boardArray);\n    }\n\n};\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/models/game.js\n ** module id = 3\n ** module chunks = 0\n **/","var GameBoard = function() {\n    // this.board = new Array(20);\n    // for (var i = 0; i < 20; i++) {\n    //   this.board[i] = new Array(20);\n    // }\n    this.boardArray = this.generateBoardArray();\n    this.R = 0;\n    this.G = 0;\n    this.B = 0;\n    this.Y = 0;\n};\n\nGameBoard.prototype = {\n    generateBoardArray: function(){\n        var array = new Array(20);\n        for (var i = 0; i < 20; i++) {\n            array[i] = new Array(20);\n            for (var j = 0; j < 20; j++) {\n                array[i][j] = null;\n            }\n        }\n        return array;\n    },\n    fill: function(coordinates, colourString) {\n        this.boardArray[coordinates[0]][coordinates[1]] = colourString;\n        this.updateColourCount(colourString);\n    },\n    inBounds: function(coordinates) {\n        if (this.boardArray[coordinates[0]]) {\n            if (this.boardArray[coordinates[0]][coordinates[1]] !== undefined) {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    },\n    listInBounds: function(coordinatesList) {\n        var inBoundsCoords = [];\n        for (var coordPair of coordinatesList) {\n            if (this.inBounds(coordPair)) {\n                inBoundsCoords.push(coordPair);\n            }\n        }\n        return inBoundsCoords;\n    },\n\n    isInBounds: function(coordinatesList){\n        if(this.listInBounds(coordinatesList).length === coordinatesList.length){\n            return true;\n        } else {\n            return false;\n        }\n\n    },\n\n    updateColourCount: function(colourString) {\n        this[colourString] += 1;\n    },\n    checkSquare: function(coordinatePair, userColour) {\n        var square = this.boardArray[coordinatePair[0]][coordinatePair[1]];\n        if (userColour) {\n            if (square === userColour) {\n                return true;\n            }\n        } else {\n            if (!square) {\n                return true;\n            }\n        }\n        return false;\n    },\n    checkSquaresAvailable: function(coordinatesList) {\n        for (var coordPair of coordinatesList) {\n            if (!this.checkSquare(coordPair)) {\n                return false;\n            }\n        }\n        return true;\n    },\n    checkCorners: function (coordinatesList, userColour) {\n        var foundValidCorner = false;\n        for (var coordPair of coordinatesList) {\n            if (this.checkSquare(coordPair, userColour)) {\n                foundValidCorner = true;\n            }\n        }\n        return foundValidCorner;\n    },\n\n    checkEdges: function( coordinatesList, userColour) {\n        return !this.checkCorners(coordinatesList, userColour);\n    },\n\n    isLegal: function( coordinates, piece, userColour ){\n        if (this[userColour] === 0) {\n\n            if(!this.cornerSquare(piece.covered(coordinates))) {\n                return false;\n            }\n        }\n        if(this.isInBounds(piece.covered(coordinates))){\n            if(this.checkSquaresAvailable(piece.covered(coordinates))){\n                if(this.checkEdges(this.listInBounds(piece.flats(coordinates)), userColour)){\n                    if(this[userColour] === 0 || this.checkCorners(this.listInBounds(piece.corners(coordinates)), userColour)){\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    cornerSquare: function( coordinatesList ){\n        for( var item of coordinatesList ){\n            if( (item[0] === 0 && item[1] === 0) || ( item[0] === 0 && item[1] === 19) || (item[0] === 19 && item[1] === 0) || (item[0] === 19 && item[1] === 19)){\n                return true;\n            }\n        }\n        return false;\n    },\n\n    placePiece: function(coordinates, piece, userColour){\n        if (this.isLegal(coordinates, piece, userColour)) {\n            for (var pair of piece.covered(coordinates)) {\n                this.fill(pair, userColour);\n            }\n            return true;\n        }\n        return false;\n    }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmodule.exports = GameBoard;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/models/gameboard.js\n ** module id = 4\n ** module chunks = 0\n **/","var GamePiece = require('./gamepiece.js');\n\nvar PresetPieces = function() {\n    this.rels = [\n        [[ ], [ ], [2], [ ], [ ]],\n        [[ ], [ ], [2,3], [ ], [ ]],\n        [[ ], [ ], [1,2], [2], [ ]],\n        [[ ], [ ], [1,2,3], [ ], [ ]],\n        [[ ], [ 2,3], [2,3], [ ], [ ]],\n        [[ ], [2], [1,2,3], [ ], [ ]],\n        [[ ], [ ], [1,2,3,4], [ ], [ ]],\n        [[ ], [3], [1,2,3], [ ], [ ]],\n        [[ ], [2,3], [1,2], [ ], [ ]],\n        [[ ], [1], [1,2,3,4], [ ], [ ]],\n        [[ ], [2], [2], [1,2,3 ], [ ]],\n        [[2], [2], [2,3,4], [ ], [ ]],\n        [[ ], [ ], [2,3,4], [1,2 ], [ ]],\n        [[ ], [3], [1,2,3], [1], [ ]],\n        [[2], [2], [2], [2], [2]],\n        [[ ], [2], [2,3], [2,3], [ ]],\n        [[ ], [2,3], [1,2], [1], [ ]],\n        [[ ], [2,3], [2], [2,3], [ ]],\n        [[ ], [ 2,3], [1,2], [ 1], [ ]],\n        [[ ], [2], [1,2,3], [2], [ ]],\n        [[ ], [2], [1,2,3,4], [ ], [ ]]\n    ];\n};\n\nPresetPieces.prototype = {\n    generatePieces: function() {\n        var pieces = [];\n        for (var i = 0; i < this.rels.length; i++) {\n            pieces.push(new GamePiece(this.rels[i]));\n        }\n        return pieces;\n    }\n};\n\nmodule.exports = PresetPieces;\n\n// ONE           = [[ ],\n//                  [ ],\n//                  [2],\n//                  [ ],\n//                  [ ]];\n//\n// TWO           = [[ ],\n//                 [ ],\n//                 [2,3],\n//                 [ ],\n//                 [ ]];\n//\n// THREE         = [[ ],\n//                  [ ],\n//                  [1,2],\n//                  [ 2],\n//                  [ ]];\n//\n// FOUR            = [[ ],\n//                   [ ],\n//                   [1,2,3],\n//                   [ ],\n//                   [ ]];\n//\n// FIVE          = [[ ],\n//                  [ 2,3],\n//                  [2,3],\n//                  [ ],\n//                  [ ]];\n//\n// SIX          = [[ ],\n//                 [ 2],\n//                 [1,2,3],\n//                 [ ],\n//                 [ ]]\n//\n// SEVEN        = [[ ],\n//                 [ ],\n//                 [1,2,3,4],\n//                 [ ],\n//                 [ ]];\n//\n// EIGHT        = [[ ],\n//                 [ 3],\n//                 [1,2,3],\n//                 [ ],\n//                 [ ]]\n//\n// NINE         = [[ ],\n//                 [ 2,3],\n//                 [1,2],\n//                 [ ],\n//                 [ ]]\n//\n// TEN          = [[ ],\n//                 [ 1],\n//                 [1,2,3,4],\n//                 [ ],\n//                 [ ]]\n//\n// ELEVEN        = [[ ],\n//                 [ 2],\n//                 [2],\n//                 [1,2,3 ],\n//                 [ ]]\n//\n// TWELVE       = [[2 ],\n//                 [ 2],\n//                 [2,3,4],\n//                 [ ],\n//                 [ ]]\n//\n// THIRTEEN     = [[ ],\n//                 [ ],\n//                 [2,3,4],\n//                 [1,2 ],\n//                 [ ]]\n//\n// FOURTEEN     = [[ ],\n//                 [ 3],\n//                 [1,2,3],\n//                 [ 1],\n//                 [ ]]\n//\n// FIFTEEN      = [[ 2],\n//                 [ 2],\n//                 [2],\n//                 [ 2],\n//                 [ 2]]\n//\n// SIXTEEN      = [[ ],\n//                 [ 2],\n//                 [2,3],\n//                 [ 2,3],\n//                 [ ]]\n//\n// SEVENTEEN    = [[ ],\n//                 [ 2,3],\n//                 [1,2],\n//                 [ 1],\n//                 [ ]]\n//\n// EIGHTEEN     = [[ ],\n//                 [ 2,3],\n//                 [2],\n//                 [ 2,3],\n//                 [ ]]\n//\n// NINETEEN     = [[ ],\n//                 [ 2,3],\n//                 [1,2],\n//                 [ 1],\n//                 [ ]]\n//\n// TWENTY       = [[ ],\n//                 [ 2],\n//                 [1,2,3],\n//                 [ 2],\n//                 [ ]]\n//\n// TWENTY-ONE   = [[ ],\n//                 [ 2],\n//                 [1,2,3,4],\n//                 [ ],\n//                 [ ]]\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/models/pieceRels.js\n ** module id = 5\n ** module chunks = 0\n **/","var User = function(name, colour) {\n    this.name = name;\n    this.colour = colour;\n    this.pieces = [];\n    this.selectedPieceIndex = 0;\n};\n\nUser.prototype = {\n\n    colourCode: function() {\n        return this.colour[0].toUpperCase();\n    },\n    selectPiece: function(pieceIndex) {\n        if (this.pieces[pieceIndex]) {\n            this.selectedPieceIndex = pieceIndex;\n        }\n    },\n    getSelectedPiece: function() {\n        return this.pieces[this.selectedPieceIndex];\n    },\n    rotatePiece: function() {\n        this.pieces[this.selectedPieceIndex].rotate();\n    },\n    flipPiece: function() {\n        this.pieces[this.selectedPieceIndex].flip();\n    },\n    removeSelectedPiece: function() {\n        this.pieces.splice(this.selectedPieceIndex, 1);\n        this.selectPiece = null;\n    }\n};\n\nmodule.exports = User;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/models/user.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}